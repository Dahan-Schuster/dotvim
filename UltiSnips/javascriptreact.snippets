snippet rnfc "React Native Functional Component" b
import React from "react";
import { View } from "react-native";

/**
 * ${2:"$1 documentation"}
 */
const ${1:`!p snip.rv = snip.basename`} = ($3) => {
	return (
		<${4:View}>
			${5:{/*TODO: Component body*/}}
		</${4/^(\w+).*/$1/}>
	);
};

export default $1;
endsnippet

snippet rfc "React Functional Component" b
import React from "react";

/**
 * ${2:"$1 documentation"}
 */
const ${1:`!p snip.rv = snip.basename`} = ($3) => {
	return (
		<${4:div}>
			${5:{/*TODO: Component body*/}}
		</${4/^(\w+).*/$1/}>
	);
};

export default $1;
endsnippet

snippet us "useState snippet" b
	const [$1, set${1/\w+\s*/\u$0/}] = useState($3);
$4
endsnippet

snippet uc "useCallback snippet" b
	const $1 = useCallback(($2) => {
		$3
	}, [$4]);
$5
endsnippet

snippet ue "useEffect snippet" b
	useEffect(($1) => {
		$2
	}, [$3]);
$4
endsnippet

snippet um "useMemo snippet" b
	const $1 = useMemo(() => {
		return $3
	}, [$4])
$5
endsnippet

snippet ur "useRef snippet" b
	const $1 = useRef($3);
$4
endsnippet

snippet un "useNavigation snippet" b
	const navigation = useNavigation();
$1
endsnippet

snippet uro "useRoute snippet" b
	const route = useRoute();
$1
endsnippet

snippet ds "Debug Style"
borderWidth: ${1:1},${2: }borderColor: '${3:red}',	
endsnippet

snippet newContext "Create a new React Context" b
import { createContext, useContext, useState } from "react";

const $1Context = createContext({});
export default $1Context;

/**
 * ${2:Contexto de $1}
 */
export const $1Provider = ({ children }) => {
	const [$3, set${3/\w+\s*/\u$0/}] = useState($4);

	return (
		<$1Context.Provider
			value={{
				$3, 
				set${3/\w+\s*/\u$0/},
				valid: true, // usado para validar se o contexto foi usado dentro de um Provider
			}}
		>
			{children}
		</$1Context.Provider>
	);
};

export const use$1 = () => {
	const context = useContext($1Context);

	if (!context.valid) {
		throw new Error('use$1 must be used within an $1Provider');
	}

	return context;
}

endsnippet

snippet useContext "Call the hook for using a context" b
const { $2 } = use$1$3();
endsnippet
